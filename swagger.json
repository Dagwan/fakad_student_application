{
  "swagger": "2.0",
  "info": {
    "title": "Fakad Infotech Centre Management API",
    "description": "API documentation for the Fakad Management API. This API is designed to help you manage electronic business cards efficiently. Whether you need to create, retrieve, update, or delete e-cards, this API has got you covered. With a user-friendly interface and comprehensive functionality, you can seamlessly integrate e-card management into your applications.\n\n**Key Features:**\n\n- **Create E-Cards:** Use the POST endpoint to add new e-cards to your database, providing details like name, occupation, position, office address, contact number, email, social media handles, and passport photograph in JSON format.\n\n- **Retrieve E-Cards:** The GET endpoint allows you to fetch a list of all e-cards or retrieve a specific e-card by its unique ID.\n\n- **Update E-Cards:** Easily update e-card information using the PUT endpoint. Send the updated details in JSON format to modify existing e-cards.\n\n- **Delete E-Cards:** Remove e-cards from your database using the DELETE endpoint. Specify the e-card's ID to delete a specific entry.\n\n**Sample Requests and Responses:** We've provided sample JSON requests and responses for each endpoint to help you understand how to interact with the API effectively.\n\n**Error Handling:** The API includes error responses and status codes to guide you in case of any issues.\n\n**API Documentation:** Explore the detailed API documentation below to learn how to use each endpoint, the expected request structures, and response formats.\n\nStart managing your e-cards effortlessly with the E-Card Management API. Integrate it into your applications to streamline e-card management and enhance user experiences.",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "fakad-student-application.onrender.com",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "middleName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "dateOfBirth": {
                  "example": "any"
                },
                "maritalStatus": {
                  "example": "any"
                },
                "phoneNumber": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "contactAddress": {
                  "example": "any"
                },
                "occupation": {
                  "example": "any"
                },
                "placeOfBirth": {
                  "example": "any"
                },
                "stateOfOrigin": {
                  "example": "any"
                },
                "localGovtArea": {
                  "example": "any"
                },
                "homeTown": {
                  "example": "any"
                },
                "villageAddress": {
                  "example": "any"
                },
                "previousTraining": {
                  "example": "any"
                },
                "previousTrainingDetails": {
                  "example": "any"
                },
                "choiceOfTrainingProgramme": {
                  "example": "any"
                },
                "passportPhotograph": {
                  "example": "any"
                },
                "guardian": {
                  "example": "any"
                },
                "nextOfKin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "middleName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "dateOfBirth": {
                  "example": "any"
                },
                "maritalStatus": {
                  "example": "any"
                },
                "phoneNumber": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "contactAddress": {
                  "example": "any"
                },
                "occupation": {
                  "example": "any"
                },
                "placeOfBirth": {
                  "example": "any"
                },
                "stateOfOrigin": {
                  "example": "any"
                },
                "localGovtArea": {
                  "example": "any"
                },
                "homeTown": {
                  "example": "any"
                },
                "villageAddress": {
                  "example": "any"
                },
                "previousTraining": {
                  "example": "any"
                },
                "previousTrainingDetails": {
                  "example": "any"
                },
                "choiceOfTrainingProgramme": {
                  "example": "any"
                },
                "passportPhotograph": {
                  "example": "any"
                },
                "guardian": {
                  "example": "any"
                },
                "nextOfKin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}